# DO-NOT-REMOVE begin-copyright-block 
#                                     
# Redistributions of any form whatsoever must retain and/or include the     
# following acknowledgment, notices and disclaimer:                         
#                                                                           
# This product includes software developed by Carnegie Mellon University.   
#                                                                           
# Copyright 2006 - 2008 by Eric Chung, Michael Ferdman, Brian Gold, Nikos   
# Hardavellas, Jangwoo Kim, Ippokratis Pandis, Minglong Shao, Jared Smolens,
# Stephen Somogyi, Evangelos Vlachos, Tom Wenisch, Anastassia Ailamaki,     
# Babak Falsafi and James C. Hoe for the SimFlex Project, Computer          
# Architecture Lab at Carnegie Mellon, Carnegie Mellon University.          
#                                                                           
# For more information, see the SimFlex project website at:                 
#   http://www.ece.cmu.edu/~simflex                                         
#                                                                           
# You may not use the name 'Carnegie Mellon University' or derivations      
# thereof to endorse or promote products derived from this software.        
#                                                                           
# If you modify the software you must place a notice on or within any       
# modified version provided or made available to any third party stating    
# that you have modified the software.  The notice shall include at least   
# your name, address, phone number, email address and the date and purpose  
# of the modification.                                                      
#                                                                           
# THE SOFTWARE IS PROVIDED 'AS-IS' WITHOUT ANY WARRANTY OF ANY KIND, EITHER 
# EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO ANY WARRANTY  
# THAT THE SOFTWARE WILL CONFORM TO SPECIFICATIONS OR BE ERROR-FREE AND ANY 
# IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,  
# TITLE, OR NON-INFRINGEMENT.  IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY 
# BE LIABLE FOR ANY DAMAGES, INCLUDING BUT NOT LIMITED TO DIRECT, INDIRECT, 
# SPECIAL OR CONSEQUENTIAL DAMAGES, ARISING OUT OF, RESULTING FROM, OR IN   
# ANY WAY CONNECTED WITH THIS SOFTWARE (WHETHER OR NOT BASED UPON WARRANTY, 
# CONTRACT, TORT OR OTHERWISE).                                             
#                                     
# DO-NOT-REMOVE end-copyright-block   
# Get variables from Makefile.defs
###############
include $(FLEXUS_ROOT)/makefile.defs

# Include the common parts of the Makefile
###############
include $(FLEXUS_ROOT)/makefile.simulator_all_ccs

SIMICS_MODNAME=MOD:flexus-$(SIMULATOR)-$(TARGET_PLATFORM)-$(SELECTED_DEBUG)-$(SELECTED_CC)

.cpp.$(OEXT):
	$(ECHO) "$(GCC) $(INCLUDES) $(GCC_CFLAGS) $(VARIANT_DEFINES) $< -o $*.$(OEXT)"
	$(GCC) $(INCLUDES) $(GCC_CFLAGS) $(VARIANT_DEFINES) $< -o $*.$(OEXT)

.PHONY: $(SIMULATOR).$(VARIANT_EXT).deps
$(SIMULATOR).$(VARIANT_EXT).deps: $(COMPONENTS_WITH_LIBS) $(CORE_STANDALONE)
$(SIMULATOR).$(VARIANT_EXT): $(patsubst %.cpp,%.$(OEXT),$(wildcard *.cpp)) $(COMPONENT_LIB_PATHS)
	$(ECHO) "$(GCC) $(GCC_LFLAGS) *.$(OEXT) $(COMPONENT_LIB_PATHS) $(STANDALONE_LIB_PATH) $(CORE_LIB_PATH) $(BOOST_LIBRARIES)  -o $@"
	$(GCC) $(GCC_LFLAGS) *.$(OEXT) $(COMPONENT_LIB_PATHS) -L$(CORE_DIR) -lcore_$(VARIANT) -lstandalone_$(VARIANT) $(BOOST_LIBRARIES)  -o $@

ifeq ($(USING_SIMICS_3),1)

module_id.x86_$(SELECTED_DEBUG)_gcc_o: $(SIMICS_X86_INCLUDE)/../module-id.template Makefile.$(SIMULATOR)
	$(ECHO) "$(GCC) $(GCC_CFLAGS) $(INCLUDES) -DMODNAME=$(SIMICS_MODNAME) -DCLASSES=$(SIMICS_CLASSES) -c $(SIMICS_X86_INCLUDE)/../module-id.template -o $@"
	$(GCC) $(GCC_CFLAGS) $(INCLUDES) -DMODNAME="\"$(SIMICS_MODNAME)\"" -DCLASSES="\"$(SIMICS_CLASSES)\"" $(SIMICS_X86_INCLUDE)/../module-id.template -o $@

module_id.v9_$(SELECTED_DEBUG)_gcc_o: $(SIMICS_V9_INCLUDE)/../module-id.template Makefile.$(SIMULATOR)
	$(ECHO) "$(GCC) $(GCC_CFLAGS) $(INCLUDES) -DMODNAME=$(SIMICS_MODNAME) -DCLASSES=$(SIMICS_CLASSES) -c $(SIMICS_V9_INCLUDE)/../module-id.template -o $@"
	$(GCC) $(GCC_CFLAGS) $(INCLUDES) -DMODNAME="\"$(SIMICS_MODNAME)\"" -DCLASSES="\"$(SIMICS_CLASSES)\"" $(SIMICS_V9_INCLUDE)/../module-id.template -o $@
else
module_id.x86_$(SELECTED_DEBUG)_gcc_o: $(SIMICS_X86_INCLUDE)/module_id.c Makefile.$(SIMULATOR)
	$(ECHO) "$(GCC) $(GCC_CFLAGS) $(INCLUDES) -DMODNAME=$(SIMICS_MODNAME) -DCLASSES=$(SIMICS_CLASSES) $(SIMICS_X86_INCLUDE)/module_id.c -o $@"
	$(GCC) $(GCC_CFLAGS) $(INCLUDES) -DMODNAME="\"$(SIMICS_MODNAME)\"" -DCLASSES="\"$(SIMICS_CLASSES)\"" $(SIMICS_X86_INCLUDE)/module_id.c -o $@

module_id.v9_$(SELECTED_DEBUG)_gcc_o: $(SIMICS_V9_INCLUDE)/module_id.c Makefile.$(SIMULATOR)
	$(ECHO) "$(GCC) $(GCC_CFLAGS) $(INCLUDES) -DMODNAME=$(SIMICS_MODNAME) -DCLASSES=$(SIMICS_CLASSES) $(SIMICS_V9_INCLUDE)/module_id.c -o $@"
	$(GCC) $(GCC_CFLAGS) $(INCLUDES) -DMODNAME="\"$(SIMICS_MODNAME)\"" -DCLASSES="\"$(SIMICS_CLASSES)\"" $(SIMICS_V9_INCLUDE)/module_id.c -o $@
endif

.PHONY: libflexus_$(SIMULATOR)_$(VARIANT).so.deps
libflexus_$(SIMULATOR)_$(VARIANT).so.deps: $(COMPONENTS_WITH_LIBS) $(CORE_SIMICS)
libflexus_$(SIMULATOR)_$(VARIANT).so: $(patsubst %.cpp,%.$(OEXT),$(wildcard *.cpp)) $(COMPONENT_LIB_PATHS) module_id.$(TARGET_PLATFORM)_$(SELECTED_DEBUG)_gcc_o $(CORE_DIR)/libcore_$(VARIANT).a.fresh
	$(ECHO) "$(GCC) $(GCC_SIMICS_LFLAGS) *.$(OEXT) $(COMPONENT_LIB_PATHS) -L$(CORE_DIR) -Wl,--whole-archive -lcore_$(VARIANT) -lsimics_$(VARIANT) $(BOOST_LIBRARIES) -o $@"
	$(GCC) $(GCC_SIMICS_LFLAGS) *.$(OEXT) $(COMPONENT_LIB_PATHS) -L$(CORE_DIR) -Wl,--whole-archive -lcore_$(VARIANT) -lsimics_$(VARIANT) $(BOOST_LIBRARIES) -o $@
